"use client";

import Image from "next/image";
import shareBox from "/public/images/share-box.png";
import { useState } from "react";
import Link from "next/link";
import { useParams } from "next/navigation";
import Clip from "../common/Clip";

/**
 * @description `SimilarCard` 컴포넌트는 유사한 취약성 뉴스 항목을 카드 형태로 표시합니다.
 * 각 카드는 제목, 레이블, 설명과 함께 핀 및 공유 버튼을 포함합니다.
 *
 * @returns {JSX.Element} 유사한 취약성 뉴스 항목을 카드 형태로 렌더링합니다.
 */

/**
 * @typedef {Object} TPinType
 * @property {number} id - 핀 상태를 추적할 항목의 고유 ID.
 * @property {boolean} state - 항목이 핀된 상태인지 여부를 나타냅니다.
 */

type TPinType = {
  id: number;
  state: boolean;
};

type TSimilarListItem = {
  id?: string;
  title?: string;
  view?: number;
  subtitle?: string;
  content?: string;
  arrayTable?: string;
};

function SimilarCard({
  subtitle,
  title,
  content,
  id,
}: TSimilarListItem): JSX.Element {
  const params = useParams();
  /**
   * 핀 상태를 토글하는 함수입니다.
   *
   * @param {number} id - 핀 상태를 변경할 항목의 ID.
   *
   * @todo
   * - 모든 페이지에서 상태 공유해야함.
   * - 나중에 데이터 연결하면서 전역에 저장 예정
   */

  const handleShareLink = (url: string) => {
    const link = location.origin + url;

    if (navigator.share) {
      navigator.share({ url: link });
    } else {
      navigator.clipboard.writeText(link);
      alert("링크가 복사되었습니다.");
    }
  };

  const dateTimePart = subtitle!.replace("게시일: ", "");
  /**
   * 현재 날짜와 주어진 날짜 사이의 차이를 계산하여 상대적인 날짜 문자열을 반환하는 함수입니다.
   *
   * @param {string} date - 비교할 날짜 문자열.
   * @returns {string} 현재 날짜와 비교 날짜 사이의 차이를 나타내는 문자열.
   */

  const getDifferDate = (date: string): string => {
    let today = new Date();

    let differ = today.getTime() - new Date(date).getTime();
    let differDate = (differ / (24 * 60 * 60 * 1000)).toFixed();
    let differHour = (differ / (60 * 60 * 1000)).toFixed();
    let differMinutes = (differ / (60 * 1000)).toFixed();
    let differSeconds = (differ / 1000).toFixed();

    if (differDate === "0" && differMinutes === "0" && differHour === "0") {
      return `${differSeconds}초 전`;
    } else if (differDate === "0" && differHour === "0") {
      return `${differMinutes}분 전`;
    } else if (differDate === "0") {
      return `${differHour}시간 전`;
    }
    return `${differDate}일 전`;
  };

  return (
    <>
      <div className="w-full rounded-md border border-neutral-20 p-5">
        <div className="flex h-[80%] w-full flex-col gap-3">
          <div className="flex h-[70%] w-full flex-col gap-2">
            {/* <Chips>{label}</Chips> */}
            <Link href={`/vulnerability-db/${id}`}>
              <h1
                style={{
                  textOverflow: "ellipsis",
                  overflow: "hidden",
                  display: "-webkit-box",
                  WebkitLineClamp: 2,
                  WebkitBoxOrient: "vertical",
                  lineHeight: "20px",
                }}
                className="h-10 w-full text-sm font-medium"
              >
                {title}
              </h1>
            </Link>
          </div>
          <span className="line-clamp-1 text-xs text-neutral-40">
            {content}
          </span>
        </div>
        <div className="mt-3 flex items-end justify-between text-[10px] text-neutral-40">
          <div className="flex gap-2">
            <Clip id={id as string} />
            <button onClick={() => handleShareLink(`/vulnerability-db/${id}`)}>
              <Image src={shareBox} width={18} height={18} alt="share" />
            </button>
          </div>
          <span>{getDifferDate(dateTimePart)}</span>
        </div>
      </div>
    </>
  );
}
export default SimilarCard;
